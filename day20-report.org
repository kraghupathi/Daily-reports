* 2016-Feb-21-Monday:
** From 9:30 AM TO 01:00 PM :
  - Today I learned about Bridge Network and setting up of a bridge network on a base machine. I have taken various articles from online is available at [[https://github.com/vlead/ovpl/blob/master/docs/bridge-setup.org][here]]
* Bridge:
- Bridge is a device that connects two LANs and controls data flow between them.
- Especially bridge is a store & forward device. During the connection of different LANs, it receives the frame from one LAN and transfer the same
  frame without encapsulating or without modification to other LAN. By using local and remote bridge, a network administrator can easily extend the network distance.
* Switch:
 - Switch is a device, Which is used to connect same network elements.
** The difference between switch and bridge:
-  Bridge is is device which divides a network into two. Switch connects multiple networks.
-  Bridge are software based and switch is a hardware based.
-  Bridge can have upto 16 ports while switch can handle many ports.
-  Bridge is rarely used. Switches are frequently used. 
* Setting Up Bridge Network
** Introduction:
- This page explains about creating a bridge and setting up of a bridge network on base machine.
- The document further explains the step by step creation of this network.
- Seen below is the diagram of bridged network along with its Containers.
[[./home/raghu/Downloads/BRIDGE.jpg]]
** Setting Up Bridge Network:
*** Connecting LAN Interface and Bridge:
- To make a connection to the bridge, LAN interface name should be known. It can be identified by using the following command
#+begin_example
ifconfig -a
#+end_example
- The first task is to create a bridge, let us call it br0 (br0=bridgename). Bridge is basically a file configured with essential
  settings which mentions the bridge name, boot protocol, on boot settings, type and if it is to be network manager controlled.
  Move to the network-scripts directory in =/etc/sysconfig= by following command
#+begin_example
cd /etc/sysconfig/network-scripts/
#+end_example
- And create a file with name =ifcfg-br0= and write the following settings:
#+begin_example
DEVICE=br0
TYPE=Bridge
ONBOOT=yes
NM_CONTROLLED=no
BOOTPROTO=none
#+end_example
- Restart network service to effect the changes.
#+begin_example
service network restrat
#+end_example
- Following command can be issued to list all the bridges created and the interfaces they are connected to.
#+begin_example
brctl show
#+end_example
- The output has to bridge and any other bridges previously created with connected interfaces.
- With current configuration used, a sample output can be seen below:
#+begin_example
bridge name	bridge id		STP enabled	interfaces
br0		8000.5cf9dd75d1f8	no		
#+end_example
*** Creating Container:
- We next move ahead in creation of a container with following settings:
#+begin_example
Syntax:= vzctl create <CT-ID> --ostemplate <template> --hostname <host-name>
Ex:= vzctl create 201 --ostemplate centos-6-x86_64-minimal --hostname centos
#+end_example
- set the netfilter to full for the container.
#+begin_example
Syntax:= vzctl set <CT-ID> --netfilter full --save
Ex:= vzctl set 201 --netfliter full --save
#+end_example
- The Container need to be connected to the bridge br0 and this is achieved by connecting with the respective interface. This is done by the following commands
#+begin_example
Syntax:= vzctl set <CT-ID> --netif_add eth0,,,,br0 --save
Ex:= vzctl set 201 --netif_add eth0,,,,br0 --save
#+end_example
- Start the container and set its status to running.
#+begin_example
Syntax:= vzctl start <CT-ID>
Ex:= vzctl start 201
#+end_example
*** Configuring Container:
- Enter the contianer
#+begin_example
Syntax:= vzctl enter <CT-ID>
Ex:= vzctl enter 201
#+end_example
- The ifcfg-eth0 file present in =/etc/sysconfig/network-script= directory for the container need to be configured with following settings
#+begin_example
Syntax:= DEVICE=eth0
         HWADDR=<<Hardware address of eth0>>
	 BOOTPROTO=static
	 ONBOOT=yes
	 NM_CONTROLLED=no
	 IPADDR=<<IP address of container>>
	 NETMASK=<<IP address of netmask>>
Ex:=     DEVICE=eth0
         HWADDR=00:18:51:20:58:72
	 BOOTPROTO=static
	 ONBOOT=yes
	 NM_CONTROLLED=no
	 IPADDR=10.11.12.1
	 NETMASK=255.0.0.0
#+end_example
- Restart the network service and check if the eth0 is assigned to ip-address or not (ifconfig command)
- The hardware address can be known by the command ifconfig -a.
- Note: Hardware address will be only available after adding the configuration files. The process is to first add the configuration without the hardware address,
  restart the service and later update it.

** From 02:30 AM TO 06:00 PM :
- I gone through Bridge network and created containers, configured containers on CentOS. And practised apache-server using following commands.
* Apache Web server:
- Apache Web Server is an open source Web server for creation, deployment and management web applications.
- Which is designed to host one or more Web applications,
- It is also widely used by Web server many companies uses this server to host their internal web applications by configuring shared/virtual hosting,
  as by default, Apache Web Server supports and distinguishes between different hosts that reside on the same machine.
+ To install Apache-server on Linux, use the following command
#+begin_example
For Linux:= sudo apt-get install apache2
For CentOS:= yum install httpd
#+end_example
** How to host a website?:
1) To start the apache server, use the following command:
#+begin_example
For Linux:= service apache2 start
For CentOS:= service httpd start
#+end_example
2) open browser and type =localhost= or =127.0.0.1= then, browser displays the default apache page. If the default page is not found, then restart the apache server by using the following command.
#+begin_example
For Linux: service apache2 restart
For CentOS: service httpd restart
#+end_example
3) create a sample html, js and css files and place them in a folder. 
4) move the contents of the folder to  =/var/www/html= or =/var/www/=
5) open browser and type =localhost/<file name> or 127.0.0.1/<file name>.
#+begin_example
localhost/example.html
#+end_example
6) To stop the apache server, use the following command:
#+begin_example
For Linux:= service apache2 stop
For CentOS:= service httpd stop
#+end_example

